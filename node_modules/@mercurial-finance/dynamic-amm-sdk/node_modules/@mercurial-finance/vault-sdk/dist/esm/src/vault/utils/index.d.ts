import { RawAccount } from '@solana/spl-token';
import { Connection, PublicKey, TransactionInstruction } from '@solana/web3.js';
import { BN } from '@coral-xyz/anchor';
import { VaultProgram } from '../types';
export declare const getAssociatedTokenAccount: (tokenMint: PublicKey, owner: PublicKey) => PublicKey;
export declare const deserializeAccount: (data: Buffer | undefined) => RawAccount | undefined;
export declare const getOrCreateATAInstruction: (tokenAddress: PublicKey, owner: PublicKey, connection: Connection, opt?: {
    payer?: PublicKey;
}) => Promise<[PublicKey, TransactionInstruction?]>;
export declare const getVaultPdas: (tokenMint: PublicKey, programId: PublicKey, seedBaseKey?: PublicKey) => {
    vaultPda: PublicKey;
    tokenVaultPda: PublicKey;
    lpMintPda: PublicKey;
};
export declare const wrapSOLInstruction: (from: PublicKey, to: PublicKey, amount: BN) => TransactionInstruction[];
export declare const unwrapSOLInstruction: (walletPublicKey: PublicKey) => Promise<TransactionInstruction | null>;
export declare const getOnchainTime: (connection: Connection) => Promise<number>;
export declare const getLpSupply: (connection: Connection, tokenMint: PublicKey) => Promise<BN>;
export declare function chunks<T>(array: T[], size: number): T[][];
export declare function chunkedFetchMultipleVaultAccount(program: VaultProgram, pks: PublicKey[], chunkSize?: number): Promise<{
    enabled: number;
    bumps: {
        vaultBump: number;
        tokenVaultBump: number;
    };
    totalAmount: BN;
    tokenVault: PublicKey;
    feeVault: PublicKey;
    tokenMint: PublicKey;
    lpMint: PublicKey;
    strategies: PublicKey[];
    base: PublicKey;
    admin: PublicKey;
    operator: PublicKey;
    lockedProfitTracker: {
        lastUpdatedLockedProfit: BN;
        lastReport: BN;
        lockedProfitDegradation: BN;
    };
}[]>;
export declare function chunkedGetMultipleAccountInfos(connection: Connection, pks: PublicKey[], chunkSize?: number): Promise<(import("@solana/web3.js").AccountInfo<Buffer> | null)[]>;
//# sourceMappingURL=index.d.ts.map